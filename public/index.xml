<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Philip Brazeale</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Philip Brazeale</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 23 Mar 2025 06:34:07 +0100</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Developer Week 036</title>
      <link>http://localhost:1313/posts/dev-week-036/</link>
      <pubDate>Sun, 23 Mar 2025 06:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/dev-week-036/</guid>
      <description>&lt;h2 id=&#34;certification-progress&#34;&gt;Certification Progress&lt;/h2&gt;&#xA;&lt;h3 id=&#34;comptia-security-1914&#34;&gt;CompTIA Security+ (19.14%)&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.comptia.org/certifications/security&#34;&gt;CompTIA Security+ SY0-701&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;microsoft-certified-azure-fundamentals-1364&#34;&gt;Microsoft Certified: Azure Fundamentals (13.64%)&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/credentials/certifications/azure-fundamentals/?practice-assessment-type=certification&#34;&gt;AZ-900 Azure Fundamentals&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;projects&#34;&gt;Projects&lt;/h2&gt;&#xA;&lt;h3 id=&#34;100-days-of-code-the-complete-python-pro-bootcamp-38100&#34;&gt;100 Days of Code: The Complete Python Pro Bootcamp (38/100)&lt;/h3&gt;&#xA;&lt;p&gt;Used Git Branching and GitHub PR&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git switch -c my_new_branch&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gh pr create --title &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Update ...&amp;#34;&lt;/span&gt; --body &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt; --label &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;enhancement&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Used GitHub web interface to review and approve PR. Will need to do further research to see if I can review and approve via the CLI, or if web is best/only option.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linux Command Line: Part 3 Common Tasks and Essential Tools</title>
      <link>http://localhost:1313/posts/linux-command-line-03/</link>
      <pubDate>Mon, 10 Mar 2025 18:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/linux-command-line-03/</guid>
      <description>&lt;h2 id=&#34;14--package-management&#34;&gt;14 – Package Management&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Today, most people can satisfy all of their software needs by installing packages from their Linux distributor. This contrasts with the early days of Linux, when one had to download and compile source code to install software. There isn’t anything wrong with compiling source code; in fact, having access to source code is the great wonder of Linux. It gives us (and everybody else) the ability to examine and improve the system.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linux Command Line: Part 2 Configuration and the Environment</title>
      <link>http://localhost:1313/posts/linux-command-line-02/</link>
      <pubDate>Mon, 10 Mar 2025 10:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/linux-command-line-02/</guid>
      <description>&lt;h2 id=&#34;11---the-environment&#34;&gt;11 - The Environment&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;This shows an important rule regarding child processes: a child process cannot alter the environment of its parent.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;launching-a-program-with-a-temporary-environment&#34;&gt;Launching a Program with a Temporary Environment&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Another handy trick the shell provides is the ability to execute a command and give it a temporary environment variable. Sometimes we want to run a program and give it a special environment value. A good example is the man command which looks for an environment variable named MANWIDTH that tells man how wide to format its output.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linux Command Line: Part 1 Learning the Shell</title>
      <link>http://localhost:1313/posts/linux-command-line-01/</link>
      <pubDate>Thu, 20 Feb 2025 10:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/linux-command-line-01/</guid>
      <description>&lt;h2 id=&#34;01-what-is-the-shell&#34;&gt;01 What is the Shell&lt;/h2&gt;&#xA;&lt;p&gt;Terminal Emulators&lt;/p&gt;&#xA;&lt;p&gt;When using a graphical user interface (GUI), we need another program called a terminal emulator to interact with the shell. If we look through our desktop menus, we will probably find one. KDE uses konsole and GNOME uses gnome-terminal, though it&amp;rsquo;s likely called simply “terminal” on our menu. A number of other terminal emulators are available for Linux, but they all basically do the same thing; give us access to the shell. You will probably develop a preference for one or another terminal emulator based on the number of bells and whistles it has.&lt;/p&gt;</description>
    </item>
    <item>
      <title>CS50P Certificate</title>
      <link>http://localhost:1313/posts/cs50p-certificate/</link>
      <pubDate>Thu, 26 Sep 2024 10:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/cs50p-certificate/</guid>
      <description>&lt;h2 id=&#34;harvard-online-cs50-python&#34;&gt;Harvard Online CS50 Python&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://pbrazeale.github.io/images/20240926_CS50P_Certificate.png&#34; alt=&#34;CS50P Certificate&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;takeaways&#34;&gt;Takeaways&lt;/h2&gt;&#xA;&lt;p&gt;I&amp;rsquo;m exceptionally grateful to Harvard for allowing the course to be offered for free online, to David J. Malan for his excellent lecturing skills, to&#xA;Carter Zenke for the supplementary videos for the lectures, and to everyone else involved in the production and distribution of the course.&lt;/p&gt;&#xA;&lt;p&gt;While I know there is still much to learn and many more milestones on the road to competency; I am confident that this course has prepared me to build real world software to solve tangible problems. My final project being a prime example. Though it may be rough, it does solve the underlining issue of gathering the KDP Reports data into a centralized database and displaying an accurate Sales/Earnings chart.&lt;/p&gt;</description>
    </item>
    <item>
      <title>CS50P Final Project</title>
      <link>http://localhost:1313/posts/cs50p-final-project/</link>
      <pubDate>Wed, 25 Sep 2024 10:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/cs50p-final-project/</guid>
      <description>&lt;h2 id=&#34;kdp-tracker&#34;&gt;KDP Tracker&lt;/h2&gt;&#xA;&lt;h4 id=&#34;video-demo-httpsyoutube0qzjcobs3eu&#34;&gt;Video Demo:  &lt;a href=&#34;https://youtu.be/0qZjCObs3eU&#34;&gt;https://youtu.be/0qZjCObs3eU&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;description&#34;&gt;Description:&lt;/h4&gt;&#xA;&lt;p&gt;An easy to use Python program for managing KDP reports by uploading them to a SQL database and then allowing the user to visualize a Sales/Earnings chart.&lt;/p&gt;&#xA;&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Import KDP Reports (.xlsx)&lt;/li&gt;&#xA;&lt;li&gt;Create SQL database from KDP Reports&lt;/li&gt;&#xA;&lt;li&gt;Track unit sales over time:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;eBook&lt;/li&gt;&#xA;&lt;li&gt;KENP&lt;/li&gt;&#xA;&lt;li&gt;Free&lt;/li&gt;&#xA;&lt;li&gt;Paperback&lt;/li&gt;&#xA;&lt;li&gt;Hardback&lt;/li&gt;&#xA;&lt;li&gt;Audio Book&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Track Royalties over time&lt;/li&gt;&#xA;&lt;li&gt;Display in easy to read chart&lt;/li&gt;&#xA;&lt;li&gt;Filter by:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Start Date range&lt;/li&gt;&#xA;&lt;li&gt;End Date range&lt;/li&gt;&#xA;&lt;li&gt;Book title&lt;/li&gt;&#xA;&lt;li&gt;Publication Format&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;how-to-use&#34;&gt;How to Use&lt;/h2&gt;&#xA;&lt;h3 id=&#34;library-requirements&#34;&gt;Library Requirements&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;PyQt5&lt;/li&gt;&#xA;&lt;li&gt;pandas&lt;/li&gt;&#xA;&lt;li&gt;sqlalchemy&lt;/li&gt;&#xA;&lt;li&gt;matplotlib&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;kdp-reportskdptracker-database&#34;&gt;KDP Reports/KDPTracker database&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Run the program from within a python environment.&#xA;&lt;ol&gt;&#xA;&lt;li&gt;It will initialize the KDPtracker database (if one does not already exist).&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Upload all the KDP Reports you want to store in the database (bottom right button)&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&amp;ldquo;Books&amp;rdquo; section on the left panel will automatically populate based on the unique titles within the database.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;kdptracker-filters&#34;&gt;KDPTracker Filters&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;&amp;ldquo;Start Date:&amp;rdquo;&lt;/strong&gt; will automatically default to 1/1/YYYY (current year).&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Change this to whichever month you want to filter by&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&amp;ldquo;End Date:&amp;rdquo;&lt;/strong&gt; will automatically default to (current day).&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Change this to whichever month you want to filter by&lt;/li&gt;&#xA;&lt;li&gt;The KDPTracker database stores records by YYYYMM (as that&amp;rsquo;s how it come from KDP Reports), so leave the day of the month as the 1st.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&amp;ldquo;Books:&amp;rdquo;&lt;/strong&gt; section is selectable one-by-one or &lt;code&gt;ctl + a&lt;/code&gt; to select all titles.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&amp;ldquo;Format:&amp;rdquo;&lt;/strong&gt; section is selectable one-by-one or &lt;code&gt;ctl + a&lt;/code&gt; to select all formats.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&amp;ldquo;Run&amp;rdquo;&lt;/strong&gt; when you&amp;rsquo;ve selected the books you want to look up, and the formats you want to check, push &amp;ldquo;Run&amp;rdquo; and the Sales/Earnings chart will automatically populate.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;kdptracker-chart&#34;&gt;KDPTracker Chart&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;X-axis&lt;/strong&gt; is by months/year (it&amp;rsquo;s recommended to view 12 months max, but there&amp;rsquo;s no limit)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Left Y-axis&lt;/strong&gt; is &amp;ldquo;net units sold/KENP reads&amp;rdquo; and corresponds to the height of the blue bar graph.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Right Y-axis&lt;/strong&gt; is &amp;ldquo;royalties&amp;rdquo; and corresponds to the dots of the orange line graph.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;design-breakdown&#34;&gt;Design Breakdown&lt;/h2&gt;&#xA;&lt;p&gt;KDP Tracker opperates as two files: project.py and kdptracker.db.&lt;/p&gt;</description>
    </item>
    <item>
      <title>CS50P Week 9 Lecture Notes</title>
      <link>http://localhost:1313/posts/cs50p-week-09/</link>
      <pubDate>Fri, 20 Sep 2024 10:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/cs50p-week-09/</guid>
      <description>&lt;h2 id=&#34;et-cetera&#34;&gt;Et Cetera&lt;/h2&gt;&#xA;&lt;h3 id=&#34;set&#34;&gt;Set&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;students &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hermione&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;house&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Gryffindor&amp;#34;&lt;/span&gt;},&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Harry&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;house&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Gryffindor&amp;#34;&lt;/span&gt;},&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ron&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;house&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Gryffindor&amp;#34;&lt;/span&gt;},&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Draco&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;house&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Slytherin&amp;#34;&lt;/span&gt;},&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Padma&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;house&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ravenclaw&amp;#34;&lt;/span&gt;},&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;houses &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; set()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; student &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; students:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    houses&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(student[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;house&amp;#34;&lt;/span&gt;])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; house &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; sorted(houses):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(house)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Use .add instead of .append for set, and it will automatically filter out duplicates.&lt;/p&gt;&#xA;&lt;h3 id=&#34;global&#34;&gt;Global&lt;/h3&gt;&#xA;&lt;p&gt;You can set a variable outside of the main function that allows all functions to modify or use the variable.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;balance &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Balance:&amp;#34;&lt;/span&gt;, balance)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    deposit(&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    withdraw(&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Balance:&amp;#34;&lt;/span&gt;, balance)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;deposit&lt;/span&gt;(n):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;global&lt;/span&gt; balance&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    balance &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; n&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;withdraw&lt;/span&gt;(n):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;global&lt;/span&gt; balance&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    balance &lt;span style=&#34;color:#f92672&#34;&gt;-=&lt;/span&gt; n&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    main()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This runs into an issue though where the balance becomes a local variable when called and modified inside main. This is where using a class of Account becomes valuable.&lt;/p&gt;</description>
    </item>
    <item>
      <title>CS50P Week 8 Lecture Notes</title>
      <link>http://localhost:1313/posts/cs50p-week-08/</link>
      <pubDate>Tue, 17 Sep 2024 10:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/cs50p-week-08/</guid>
      <description>&lt;h2 id=&#34;oop-object-oriented-programming&#34;&gt;OOP (Object-Oriented Programming)&lt;/h2&gt;&#xA;&lt;h3 id=&#34;step-1-of-creating-an-oop&#34;&gt;Step 1 of creating an OOP&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; get_name()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    house &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; get_house()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;name&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; from &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;house&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_name&lt;/span&gt;():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; input(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Name: &amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_house&lt;/span&gt;():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; input(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;House: &amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    main()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Where the name and house variables are now defined by using separate functions, and those functions could be used again in the future.&lt;/p&gt;&#xA;&lt;h3 id=&#34;tuple&#34;&gt;Tuple&lt;/h3&gt;&#xA;&lt;p&gt;&lt;em&gt;&amp;ldquo;A tuple is a sequences of values. Unlike a list, a tuple can’t be modified. In spirit, we are returning two values.&amp;rdquo;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>CS50P Week 7 Lecture Notes</title>
      <link>http://localhost:1313/posts/cs50p-week-07/</link>
      <pubDate>Thu, 12 Sep 2024 10:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/cs50p-week-07/</guid>
      <description>&lt;h2 id=&#34;regular-expressions&#34;&gt;Regular Expressions&lt;/h2&gt;&#xA;&lt;p&gt;Really just a pattern. &lt;strong&gt;REGEX&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;email &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; input(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;What&amp;#39;s your email? &amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strip()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; email &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; email:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Valid&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Invalid&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;email &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; input(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;What&amp;#39;s your email? &amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strip()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;username, domain &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; email&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#if username and &amp;#34;.&amp;#34; in domain:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; username &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; domain&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;endswhith(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.edu&amp;#34;&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Valid&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Invalid&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;regular-expression-re&#34;&gt;Regular Expression (RE)&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.python.org/3/library/re.html&#34;&gt;Python Documentation&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;re.serach&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; re&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;email &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; input(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;What&amp;#39;s your email? &amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strip()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; re&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;serach(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@&amp;#34;&lt;/span&gt;, email):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Valid&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Invalid&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Validation characters&lt;/p&gt;</description>
    </item>
    <item>
      <title>CS50P Week 6 Lecture Notes</title>
      <link>http://localhost:1313/posts/cs50p-week-06/</link>
      <pubDate>Tue, 10 Sep 2024 10:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/cs50p-week-06/</guid>
      <description>&lt;h2 id=&#34;file-io&#34;&gt;File I/O&lt;/h2&gt;&#xA;&lt;p&gt;List can store multiple values, but they&amp;rsquo;re still saved in the computer memory; so nor permanent after the program closes.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;names &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; _ &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;names&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(input(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;What;s your name?&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; name &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; sorted(names):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;name&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;open&#34;&gt;Open&lt;/h3&gt;&#xA;&lt;p&gt;allows you to access a file&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; input(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;What&amp;#39;s your name?&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; open(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;names.txt&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;file&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;name&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;file&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&amp;ldquo;w&amp;rdquo; is for write to the file, and if the file doesn&amp;rsquo;t exist, &lt;strong&gt;open&lt;/strong&gt; will create the file automatically for me.&#xA;This will also overwrite the file each time.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Developer Week 007</title>
      <link>http://localhost:1313/posts/dev-week-007/</link>
      <pubDate>Sun, 01 Sep 2024 16:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/dev-week-007/</guid>
      <description>&lt;h2 id=&#34;linux&#34;&gt;Linux&lt;/h2&gt;&#xA;&lt;h3 id=&#34;omakub&#34;&gt;Omakub&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;An Omakase Developer Setup for Ubuntu 24.04 by DHH&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a href=&#34;https://omakub.org/&#34;&gt;https://omakub.org/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Took the plunge and setup Omakub on my T430. Took three attempts because of dependency glitches, but after a couple of restarts it installed without error and worked fine. Not sure I&amp;rsquo;m ready to jump into NeoVIM, but thus far I prefer the GUI compared to vanilla Ubuntu.&lt;/p&gt;&#xA;&lt;p&gt;Of course I stuck with the Tokyo Night theme, but there&amp;rsquo;s several prebuilt to chose from and the prebuilt &amp;ldquo;default&amp;rdquo; aspect is the point of Omakub.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Developer Week 006</title>
      <link>http://localhost:1313/posts/dev-week-006/</link>
      <pubDate>Sun, 25 Aug 2024 16:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/dev-week-006/</guid>
      <description>&lt;h2 id=&#34;cs50x-progress-91&#34;&gt;CS50X (Progress 91%)&lt;/h2&gt;&#xA;&lt;h3 id=&#34;week-9-flask&#34;&gt;Week 9 Flask&lt;/h3&gt;&#xA;&lt;h4 id=&#34;birthdays&#34;&gt;Birthdays&lt;/h4&gt;&#xA;&lt;p&gt;This was easy enough, as the walkthrough included all the code required.&lt;/p&gt;&#xA;&lt;h4 id=&#34;finance&#34;&gt;Finance&lt;/h4&gt;&#xA;&lt;p&gt;The above was made up for by creating a larger scope for this project.&lt;/p&gt;&#xA;&lt;p&gt;This was definitely the largest assignment by scope from the course, but I don&amp;rsquo;t feel that it was overly difficult. Figuring out how to use display SQL databases on a website will be an evaluable tool moving forward.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Developer Week 005</title>
      <link>http://localhost:1313/posts/dev-week-005/</link>
      <pubDate>Sun, 18 Aug 2024 16:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/dev-week-005/</guid>
      <description>&lt;h2 id=&#34;cs50x-progress-86&#34;&gt;CS50X (Progress 86%)&lt;/h2&gt;&#xA;&lt;h3 id=&#34;week-7-sql&#34;&gt;Week 7 SQL&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://pbrazeale.github.io/CS50X-Week-7-Lecture-Notes/&#34;&gt;CS50X Week 7 Lecture Notes&lt;/a&gt;&#xA;These are by far my most detailed notes I&amp;rsquo;ve taken in the course thus far. Instantly when I reached this lecture I felt &lt;strong&gt;jazzed up&lt;/strong&gt; and ready to go!&lt;/p&gt;&#xA;&lt;p&gt;I know data, and databases aren&amp;rsquo;t the flashiest part of programing and software development, but the moment David began to talk about IMDB I knew this was &lt;strong&gt;vital&lt;/strong&gt; information I needed. Extrapolating out, I think this week&amp;rsquo;s lecture and course work might have taught me enough to implement my own data management for the software I&amp;rsquo;m planning. &lt;a href=&#34;https://pbrazeale.github.io/dev-week-001/&#34;&gt;Developer Week 001&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>The 3 Laws of Writing Readable Code: NOTES</title>
      <link>http://localhost:1313/posts/writing-readable-code-notes/</link>
      <pubDate>Fri, 16 Aug 2024 16:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/writing-readable-code-notes/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Source:&lt;/strong&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=-AzSRHiV9Cc&#34;&gt;The 3 Laws of Writing Readable Code&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;law-1-avoid-deeply-nested-logic&#34;&gt;Law 1: Avoid Deeply Nested Logic&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;logic is harder to understand&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; !&lt;span style=&#34;color:#a6e22e&#34;&gt;isMaintenancePeriod&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;isAuthenticatedUser&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;isAuthorizedUser&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;_&lt;/span&gt;. &lt;span style=&#34;color:#a6e22e&#34;&gt;product&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;range&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cart&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;// Core Logic&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;switch&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;product&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Type&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;alcohol&amp;#34;&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;total&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;alcoholTax&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;electronics&amp;#34;&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;total&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;electronicsTax&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;total&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;generalTax&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;}&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Fatalf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user not authorized&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;}&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Fatalf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;invalid user credentials&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Fatalf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;feature unabailable&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;solutions&#34;&gt;Solutions&lt;/h3&gt;&#xA;&lt;h4 id=&#34;inversion&#34;&gt;Inversion&lt;/h4&gt;&#xA;&lt;p&gt;&lt;em&gt;Catch the error conditions earlier and only allow the core logic code to execute if all else is good&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Developer Week 004</title>
      <link>http://localhost:1313/posts/dev-week-004/</link>
      <pubDate>Sun, 11 Aug 2024 16:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/dev-week-004/</guid>
      <description>&lt;h2 id=&#34;cs50x-progress-64&#34;&gt;CS50X (Progress 64%)&lt;/h2&gt;&#xA;&lt;h3 id=&#34;week-5-data-structures&#34;&gt;Week 5 Data Structures&lt;/h3&gt;&#xA;&lt;h4 id=&#34;problem---speller&#34;&gt;Problem - Speller&lt;/h4&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&amp;ldquo;For this problem, you’ll implement a program that spell-checks a file, a la the below, using a hash table.&amp;rdquo;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;This kicked my ass! The lecture was excellent, but I struggled to wrap my head around pointers and hash tables.&lt;/p&gt;&#xA;&lt;p&gt;Huge shoutout to Low Level Learning&amp;rsquo;s &lt;a href=&#34;https://www.youtube.com/watch?v=2ybLD6_2gKM&#34;&gt;video&lt;/a&gt; on pointers; it made pointers click for me. I think it stemmed from the visual representation.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Developer Week 003</title>
      <link>http://localhost:1313/posts/dev-week-003/</link>
      <pubDate>Sun, 28 Jul 2024 16:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/dev-week-003/</guid>
      <description>&lt;h2 id=&#34;cs50x&#34;&gt;CS50X&lt;/h2&gt;&#xA;&lt;h3 id=&#34;week-4-progress-36&#34;&gt;Week 4 (progress 36%)&lt;/h3&gt;&#xA;&lt;p&gt;Filters took me several hours to wrap my mind around the process of navigating the bitmap to then apply the proper filtering algorithm to.&lt;/p&gt;&#xA;&lt;h3 id=&#34;online-support&#34;&gt;Online Support&lt;/h3&gt;&#xA;&lt;p&gt;Recover was going well, but when I googled an error I ran into while compiling a reddit post shared a &amp;ldquo;hint&amp;rdquo; by displaying the entire code solution -_- so it took the wind out of me that day. Obviously I can&amp;rsquo;t unread it, so it spoiled the learning curve for myself.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Developer Week 001</title>
      <link>http://localhost:1313/posts/dev-week-001/</link>
      <pubDate>Sun, 21 Jul 2024 16:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/dev-week-001/</guid>
      <description>&lt;h2 id=&#34;identify-the-problem&#34;&gt;Identify The Problem&lt;/h2&gt;&#xA;&lt;p&gt;Indie Authors, are forced to wear multiple hats.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Content Creator&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Novels&lt;/li&gt;&#xA;&lt;li&gt;Other media where applicable&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Marketing Director&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Either direct sales via advertising&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Meta&lt;/li&gt;&#xA;&lt;li&gt;Bookbub&lt;/li&gt;&#xA;&lt;li&gt;Amazon&lt;/li&gt;&#xA;&lt;li&gt;Multitude of eBook newsletter sites&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;And/or social media influence&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Product Designer&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Design and implementation of eBooks with .epub&lt;/li&gt;&#xA;&lt;li&gt;Design and implementation of print books with .pdf&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;There&amp;rsquo;s more, but it&amp;rsquo;s this last pain point that most authors struggle with. Cover design is a known aspect that&amp;rsquo;s outsourced to a graphic design expert, but for most authors outsourcing the eBook and print book layout is not a viable expense.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Developer Week 002</title>
      <link>http://localhost:1313/posts/dev-week-002/</link>
      <pubDate>Sun, 21 Jul 2024 16:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/dev-week-002/</guid>
      <description>&lt;h2 id=&#34;identify-the-problem&#34;&gt;Identify The Problem&lt;/h2&gt;&#xA;&lt;p&gt;Indie Authors, are forced to wear multiple hats.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Content Creator&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Novels&lt;/li&gt;&#xA;&lt;li&gt;Other media where applicable&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Marketing Director&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Either direct sales via advertising&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Meta&lt;/li&gt;&#xA;&lt;li&gt;Bookbub&lt;/li&gt;&#xA;&lt;li&gt;Amazon&lt;/li&gt;&#xA;&lt;li&gt;Multitude of eBook newsletter sites&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;And/or social media influence&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Product Designer&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Design and implementation of eBooks with .epub&lt;/li&gt;&#xA;&lt;li&gt;Design and implementation of print books with .pdf&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;There&amp;rsquo;s more, but it&amp;rsquo;s this last pain point that most authors struggle with. Cover design is a known aspect that&amp;rsquo;s outsourced to a graphic design expert, but for most authors outsourcing the eBook and print book layout is not a viable expense.&lt;/p&gt;</description>
    </item>
    <item>
      <title>🧙‍♂️ Philip Brazeale</title>
      <link>http://localhost:1313/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/about/</guid>
      <description>&lt;h2 id=&#34;digital-craftsman-developerauthorpublisher&#34;&gt;Digital Craftsman (Developer/Author/Publisher)&lt;/h2&gt;&#xA;&lt;p&gt;I’m a software developer, veracious learner, and author, with a background in publishing. I thrive on solving puzzles and delivering cost effective solutions to end users.&lt;/p&gt;&#xA;&lt;p&gt;My mission is to accelerate the adoption of AI by democratizing access to 5+ Billion global citizens with internet access, by combining my unique skillset of writing and software development.&lt;/p&gt;&#xA;&lt;p&gt;I’m open to joining a team who’s mission is to solve Roko’s … and are aligned with the principle of harnessing the AI revolution to increase the baseline condition for all beyond subsistence.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
