<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Philip Brazeale</title>
    <link>http://localhost:1313/tags/python/</link>
    <description>Recent content in Python on Philip Brazeale</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 23 Mar 2025 06:34:07 +0100</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Developer Week 036</title>
      <link>http://localhost:1313/posts/dev-week-036/</link>
      <pubDate>Sun, 23 Mar 2025 06:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/dev-week-036/</guid>
      <description>&lt;h2 id=&#34;certification-progress&#34;&gt;Certification Progress&lt;/h2&gt;&#xA;&lt;h3 id=&#34;comptia-security-1914&#34;&gt;CompTIA Security+ (19.14%)&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.comptia.org/certifications/security&#34;&gt;CompTIA Security+ SY0-701&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;microsoft-certified-azure-fundamentals-1364&#34;&gt;Microsoft Certified: Azure Fundamentals (13.64%)&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/credentials/certifications/azure-fundamentals/?practice-assessment-type=certification&#34;&gt;AZ-900 Azure Fundamentals&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;projects&#34;&gt;Projects&lt;/h2&gt;&#xA;&lt;h3 id=&#34;100-days-of-code-the-complete-python-pro-bootcamp-38100&#34;&gt;100 Days of Code: The Complete Python Pro Bootcamp (38/100)&lt;/h3&gt;&#xA;&lt;p&gt;Used Git Branching and GitHub PR&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git switch -c my_new_branch&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gh pr create --title &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Update ...&amp;#34;&lt;/span&gt; --body &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt; --label &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;enhancement&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Used GitHub web interface to review and approve PR. Will need to do further research to see if I can review and approve via the CLI, or if web is best/only option.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Developer Week 035</title>
      <link>http://localhost:1313/posts/dev-week-035/</link>
      <pubDate>Sun, 16 Mar 2025 06:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/dev-week-035/</guid>
      <description>&lt;h2 id=&#34;certification-progress&#34;&gt;Certification Progress&lt;/h2&gt;&#xA;&lt;h3 id=&#34;comptia-security-1254&#34;&gt;&lt;a href=&#34;https://www.comptia.org/certifications/security&#34;&gt;CompTIA Security+&lt;/a&gt; (12.54%)&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://pbrazeale.github.io/Security+-Study-Guide-Introduction/&#34;&gt;Security+ Study Guide Introduction&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://pbrazeale.github.io/Security+-Study-Guide-01-Today&#39;s-Security-Professional/&#34;&gt;Security+ Study Guide 01 Today&amp;rsquo;s Security Professional&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://pbrazeale.github.io/Security+-Study-Guide-02-Cybersecurity-Threat-Landscape/&#34;&gt;Security+ Study Guide 02 Cybersecurity Threat Landscape&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;projects&#34;&gt;Projects&lt;/h2&gt;&#xA;&lt;h3 id=&#34;100-days-of-code-the-complete-python-pro-bootcamp-37100&#34;&gt;100 Days of Code: The Complete Python Pro Bootcamp (37/100)&lt;/h3&gt;&#xA;&lt;p&gt;Fun projects, but because the course is several years old at this point, some of the APIs don&amp;rsquo;t allow for students to use them the same way they did when the course was created. Regardless, the lessons are still informative and good practice.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Developer Week 034</title>
      <link>http://localhost:1313/posts/dev-week-034/</link>
      <pubDate>Sun, 09 Mar 2025 06:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/dev-week-034/</guid>
      <description>&lt;h2 id=&#34;projects&#34;&gt;Projects&lt;/h2&gt;&#xA;&lt;h3 id=&#34;security-acronym-flash-cards&#34;&gt;Security+ Acronym Flash Cards&lt;/h3&gt;&#xA;&lt;p&gt;This is the first project I&amp;rsquo;m proud enough of to pin on my github profile and writeup a proper README for:&#xA;&lt;a href=&#34;https://github.com/pbrazeale/security_plus_acronym_flash_cards&#34;&gt;https://github.com/pbrazeale/security_plus_acronym_flash_cards&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Took Day 031 and expanded upon it to give myself &lt;em&gt;and others&lt;/em&gt;, a study tool for the long this of Acronyms.&lt;/p&gt;&#xA;&lt;p&gt;I had a PDF list, which wasn&amp;rsquo;t fully formatted.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;First was to use GPT to clean the list all on one line.&lt;/li&gt;&#xA;&lt;li&gt;Was to practice my python skills and pandas.&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Ran into an issue where pandas was separating on commas within the &amp;ldquo;Spelled Out&amp;rdquo; column, so I used GPT again to write up a quick line by line filter.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;With the clean &amp;ldquo;acronym_list.csv&amp;rdquo; I could start the build.&lt;/li&gt;&#xA;&lt;li&gt;With the new &amp;ldquo;acronym_list.csv&amp;rdquo; modifying the flashcard code app was as simple as modifying file names and uploading.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;100-days-of-code-the-complete-python-pro-bootcamp-33100&#34;&gt;100 Days of Code: The Complete Python Pro Bootcamp (33/100)&lt;/h3&gt;&#xA;&lt;h4 id=&#34;day-028-pomodoro-timer&#34;&gt;Day 028 Pomodoro Timer&lt;/h4&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pbrazeale/100-Days-of-Code/tree/main/day_028_pomodoro&#34;&gt;https://github.com/pbrazeale/100-Days-of-Code/tree/main/day_028_pomodoro&lt;/a&gt;&#xA;Built a pomodoro timer with Tkinter.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Developer Week 033</title>
      <link>http://localhost:1313/posts/dev-week-033/</link>
      <pubDate>Sun, 02 Mar 2025 06:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/dev-week-033/</guid>
      <description>&lt;h2 id=&#34;projects&#34;&gt;Projects&lt;/h2&gt;&#xA;&lt;h3 id=&#34;100-days-of-code-the-complete-python-pro-bootcamp-27100&#34;&gt;100 Days of Code: The Complete Python Pro Bootcamp (27/100)&lt;/h3&gt;&#xA;&lt;h4 id=&#34;day-024-mail-merge&#34;&gt;Day 024 Mail Merge&lt;/h4&gt;&#xA;&lt;p&gt;Excellent project. I can already see how using this to rename filenames throughout a dir would be helpful.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Major takeaway:&lt;/strong&gt; windows makes reading the files tedious since I have to &lt;code&gt;\\&lt;/code&gt; each provided &lt;code&gt;\&lt;/code&gt; when copying a relative path. I need to finalize my Linux setup and then I can practice git pull and starting fresh on new system on an established codebase.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Developer Week 032</title>
      <link>http://localhost:1313/posts/dev-week-032/</link>
      <pubDate>Sun, 23 Feb 2025 06:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/dev-week-032/</guid>
      <description>&lt;h2 id=&#34;projects&#34;&gt;Projects&lt;/h2&gt;&#xA;&lt;h3 id=&#34;100-days-of-code-the-complete-python-pro-bootcamp-22100&#34;&gt;100 Days of Code: The Complete Python Pro Bootcamp (22/100)&lt;/h3&gt;&#xA;&lt;h4 id=&#34;day-15&#34;&gt;Day 15&lt;/h4&gt;&#xA;&lt;p&gt;Built CLI coffee machine logic.&#xA;&lt;a href=&#34;https://github.com/pbrazeale/100-Days-of-Code/blob/main/Day_015_Coffee_Machine/main.py&#34;&gt;https://github.com/pbrazeale/100-Days-of-Code/blob/main/Day_015_Coffee_Machine/main.py&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Managed to build everything but the &amp;ldquo;off&amp;rdquo; function without watching the solution. When she went over that requirement, I &lt;code&gt;import sys&lt;/code&gt; and added a &lt;code&gt;sys.exit()&lt;/code&gt; call for an &amp;ldquo;off&amp;rdquo; request. This was far more engaging than the fist chunk of problems, and I&amp;rsquo;m finally excited to keep going.&lt;/p&gt;&#xA;&lt;h4 id=&#34;day-017&#34;&gt;Day 017&lt;/h4&gt;&#xA;&lt;p&gt;Built a CLI Quiz Game.&#xA;&lt;a href=&#34;https://github.com/pbrazeale/100-Days-of-Code/tree/main/Day_017_Quiz_Game&#34;&gt;https://github.com/pbrazeale/100-Days-of-Code/tree/main/Day_017_Quiz_Game&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Developer Week 031</title>
      <link>http://localhost:1313/posts/dev-week-031/</link>
      <pubDate>Sun, 16 Feb 2025 06:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/dev-week-031/</guid>
      <description>&lt;h2 id=&#34;neetcode-sql-for-beginners-5975&#34;&gt;NeetCode SQL for Beginners (59/75)&lt;/h2&gt;&#xA;&lt;p&gt;Should be wrapping this us this week, and then next week I&amp;rsquo;ll need to find a project database to practice more &amp;ldquo;real-world&amp;rdquo; style quires integrated with python to graph and display useable insights.&lt;/p&gt;&#xA;&lt;h2 id=&#34;projects&#34;&gt;Projects&lt;/h2&gt;&#xA;&lt;h3 id=&#34;100-days-of-code-the-complete-python-pro-bootcamp-14100&#34;&gt;100 Days of Code: The Complete Python Pro Bootcamp (14/100)&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.udemy.com/course/100-days-of-code/&#34;&gt;https://www.udemy.com/course/100-days-of-code/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;This came across my feed as a recommendation when I was looking for Python books, and I was able to snag it on sale, so it seemed a no brainer. The simple act of dedicated focus and building projects publicly should prove well worth the price of admission.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Developer Week 030</title>
      <link>http://localhost:1313/posts/dev-week-030/</link>
      <pubDate>Sun, 09 Feb 2025 06:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/dev-week-030/</guid>
      <description>&lt;h2 id=&#34;neetcode-algorithms-and-data-structures-for-beginners-progress-2835&#34;&gt;NeetCode Algorithms and Data Structures for Beginners (progress 28/35)&lt;/h2&gt;&#xA;&lt;h3 id=&#34;neetcode-150-progress-26150&#34;&gt;NeetCode 150 (progress 26/150)&lt;/h3&gt;&#xA;&lt;h2 id=&#34;projects&#34;&gt;Projects&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ehD6tdxmjDU&#34;&gt;I Learned Python By Building These Projects - Tutorial for Beginners&lt;/a&gt; followed along with these and tried to stay one step ahead whilst going through it to see just how well I understood python. Project 1, learned to use &lt;code&gt;for idx, quesiton in enumerate(selected_questions):&lt;/code&gt; as a way to step through the dictionary which if far more elegant than my loop approach.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Developer Week 011</title>
      <link>http://localhost:1313/posts/dev-week-011/</link>
      <pubDate>Sun, 29 Sep 2024 16:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/dev-week-011/</guid>
      <description>&lt;h2 id=&#34;cs50p-final-project-progress-100&#34;&gt;CS50P Final Project (Progress 100%)&lt;/h2&gt;&#xA;&lt;p&gt;It&amp;rsquo;s hard to place an exact progress report as there&amp;rsquo;s no clear cut milestones toward the final product. Likewise, the final product I plan to release to the public will be a bit more polished than what I turn in as my course project. I&amp;rsquo;ll use this as my beta MVP and then tweak based on feedback.&lt;/p&gt;&#xA;&lt;h3 id=&#34;python-desktop-app-with-pyqt&#34;&gt;Python Desktop App with PyQt&lt;/h3&gt;&#xA;&lt;p&gt;Thanks to &lt;a href=&#34;https://www.youtube.com/watch?v=4y9BWBkj9Bo&#34;&gt;Code With Josh&lt;/a&gt; I was able to learn the basics of how to make the desktop application I envisioned to track and display book royalties using a SQL database.&lt;/p&gt;</description>
    </item>
    <item>
      <title>CS50P Certificate</title>
      <link>http://localhost:1313/posts/cs50p-certificate/</link>
      <pubDate>Thu, 26 Sep 2024 10:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/cs50p-certificate/</guid>
      <description>&lt;h2 id=&#34;harvard-online-cs50-python&#34;&gt;Harvard Online CS50 Python&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://pbrazeale.github.io/images/20240926_CS50P_Certificate.png&#34; alt=&#34;CS50P Certificate&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;takeaways&#34;&gt;Takeaways&lt;/h2&gt;&#xA;&lt;p&gt;I&amp;rsquo;m exceptionally grateful to Harvard for allowing the course to be offered for free online, to David J. Malan for his excellent lecturing skills, to&#xA;Carter Zenke for the supplementary videos for the lectures, and to everyone else involved in the production and distribution of the course.&lt;/p&gt;&#xA;&lt;p&gt;While I know there is still much to learn and many more milestones on the road to competency; I am confident that this course has prepared me to build real world software to solve tangible problems. My final project being a prime example. Though it may be rough, it does solve the underlining issue of gathering the KDP Reports data into a centralized database and displaying an accurate Sales/Earnings chart.&lt;/p&gt;</description>
    </item>
    <item>
      <title>CS50P Final Project</title>
      <link>http://localhost:1313/posts/cs50p-final-project/</link>
      <pubDate>Wed, 25 Sep 2024 10:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/cs50p-final-project/</guid>
      <description>&lt;h2 id=&#34;kdp-tracker&#34;&gt;KDP Tracker&lt;/h2&gt;&#xA;&lt;h4 id=&#34;video-demo-httpsyoutube0qzjcobs3eu&#34;&gt;Video Demo:  &lt;a href=&#34;https://youtu.be/0qZjCObs3eU&#34;&gt;https://youtu.be/0qZjCObs3eU&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;description&#34;&gt;Description:&lt;/h4&gt;&#xA;&lt;p&gt;An easy to use Python program for managing KDP reports by uploading them to a SQL database and then allowing the user to visualize a Sales/Earnings chart.&lt;/p&gt;&#xA;&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Import KDP Reports (.xlsx)&lt;/li&gt;&#xA;&lt;li&gt;Create SQL database from KDP Reports&lt;/li&gt;&#xA;&lt;li&gt;Track unit sales over time:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;eBook&lt;/li&gt;&#xA;&lt;li&gt;KENP&lt;/li&gt;&#xA;&lt;li&gt;Free&lt;/li&gt;&#xA;&lt;li&gt;Paperback&lt;/li&gt;&#xA;&lt;li&gt;Hardback&lt;/li&gt;&#xA;&lt;li&gt;Audio Book&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Track Royalties over time&lt;/li&gt;&#xA;&lt;li&gt;Display in easy to read chart&lt;/li&gt;&#xA;&lt;li&gt;Filter by:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Start Date range&lt;/li&gt;&#xA;&lt;li&gt;End Date range&lt;/li&gt;&#xA;&lt;li&gt;Book title&lt;/li&gt;&#xA;&lt;li&gt;Publication Format&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;how-to-use&#34;&gt;How to Use&lt;/h2&gt;&#xA;&lt;h3 id=&#34;library-requirements&#34;&gt;Library Requirements&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;PyQt5&lt;/li&gt;&#xA;&lt;li&gt;pandas&lt;/li&gt;&#xA;&lt;li&gt;sqlalchemy&lt;/li&gt;&#xA;&lt;li&gt;matplotlib&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;kdp-reportskdptracker-database&#34;&gt;KDP Reports/KDPTracker database&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Run the program from within a python environment.&#xA;&lt;ol&gt;&#xA;&lt;li&gt;It will initialize the KDPtracker database (if one does not already exist).&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Upload all the KDP Reports you want to store in the database (bottom right button)&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&amp;ldquo;Books&amp;rdquo; section on the left panel will automatically populate based on the unique titles within the database.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;kdptracker-filters&#34;&gt;KDPTracker Filters&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;&amp;ldquo;Start Date:&amp;rdquo;&lt;/strong&gt; will automatically default to 1/1/YYYY (current year).&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Change this to whichever month you want to filter by&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&amp;ldquo;End Date:&amp;rdquo;&lt;/strong&gt; will automatically default to (current day).&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Change this to whichever month you want to filter by&lt;/li&gt;&#xA;&lt;li&gt;The KDPTracker database stores records by YYYYMM (as that&amp;rsquo;s how it come from KDP Reports), so leave the day of the month as the 1st.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&amp;ldquo;Books:&amp;rdquo;&lt;/strong&gt; section is selectable one-by-one or &lt;code&gt;ctl + a&lt;/code&gt; to select all titles.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&amp;ldquo;Format:&amp;rdquo;&lt;/strong&gt; section is selectable one-by-one or &lt;code&gt;ctl + a&lt;/code&gt; to select all formats.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&amp;ldquo;Run&amp;rdquo;&lt;/strong&gt; when you&amp;rsquo;ve selected the books you want to look up, and the formats you want to check, push &amp;ldquo;Run&amp;rdquo; and the Sales/Earnings chart will automatically populate.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;kdptracker-chart&#34;&gt;KDPTracker Chart&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;X-axis&lt;/strong&gt; is by months/year (it&amp;rsquo;s recommended to view 12 months max, but there&amp;rsquo;s no limit)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Left Y-axis&lt;/strong&gt; is &amp;ldquo;net units sold/KENP reads&amp;rdquo; and corresponds to the height of the blue bar graph.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Right Y-axis&lt;/strong&gt; is &amp;ldquo;royalties&amp;rdquo; and corresponds to the dots of the orange line graph.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;design-breakdown&#34;&gt;Design Breakdown&lt;/h2&gt;&#xA;&lt;p&gt;KDP Tracker opperates as two files: project.py and kdptracker.db.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Developer Week 010</title>
      <link>http://localhost:1313/posts/dev-week-010/</link>
      <pubDate>Sun, 22 Sep 2024 16:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/dev-week-010/</guid>
      <description>&lt;h2 id=&#34;cs50p-progress-90&#34;&gt;CS50P (Progress 90%)&lt;/h2&gt;&#xA;&lt;h3 id=&#34;week-7-regular-expressions&#34;&gt;Week 7 Regular Expressions&lt;/h3&gt;&#xA;&lt;h4 id=&#34;working-9-to-5&#34;&gt;Working 9 to 5&lt;/h4&gt;&#xA;&lt;p&gt;Not sure what was wrong with the program, but after nearly two hours of trying to fix my test_working.py file I submitted for a 16/18 score. For the life of me I can&amp;rsquo;t understand what the issue was with testing for a SystemExit(&amp;ldquo;ValueError&amp;rdquo;), but regardless, the assignment is done and I&amp;rsquo;m moving forward.&lt;/p&gt;&#xA;&lt;h3 id=&#34;week-8-oop&#34;&gt;Week 8 OOP&lt;/h3&gt;&#xA;&lt;p&gt;A review of what I learned in CS50X, but always good to refresh, and I learned the technical definition of a tuple which will be useful moving forward.&lt;/p&gt;</description>
    </item>
    <item>
      <title>CS50P Week 9 Lecture Notes</title>
      <link>http://localhost:1313/posts/cs50p-week-09/</link>
      <pubDate>Fri, 20 Sep 2024 10:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/cs50p-week-09/</guid>
      <description>&lt;h2 id=&#34;et-cetera&#34;&gt;Et Cetera&lt;/h2&gt;&#xA;&lt;h3 id=&#34;set&#34;&gt;Set&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;students &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hermione&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;house&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Gryffindor&amp;#34;&lt;/span&gt;},&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Harry&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;house&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Gryffindor&amp;#34;&lt;/span&gt;},&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ron&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;house&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Gryffindor&amp;#34;&lt;/span&gt;},&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Draco&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;house&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Slytherin&amp;#34;&lt;/span&gt;},&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Padma&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;house&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ravenclaw&amp;#34;&lt;/span&gt;},&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;houses &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; set()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; student &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; students:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    houses&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(student[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;house&amp;#34;&lt;/span&gt;])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; house &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; sorted(houses):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(house)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Use .add instead of .append for set, and it will automatically filter out duplicates.&lt;/p&gt;&#xA;&lt;h3 id=&#34;global&#34;&gt;Global&lt;/h3&gt;&#xA;&lt;p&gt;You can set a variable outside of the main function that allows all functions to modify or use the variable.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;balance &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Balance:&amp;#34;&lt;/span&gt;, balance)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    deposit(&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    withdraw(&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Balance:&amp;#34;&lt;/span&gt;, balance)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;deposit&lt;/span&gt;(n):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;global&lt;/span&gt; balance&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    balance &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; n&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;withdraw&lt;/span&gt;(n):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;global&lt;/span&gt; balance&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    balance &lt;span style=&#34;color:#f92672&#34;&gt;-=&lt;/span&gt; n&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    main()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This runs into an issue though where the balance becomes a local variable when called and modified inside main. This is where using a class of Account becomes valuable.&lt;/p&gt;</description>
    </item>
    <item>
      <title>CS50P Week 8 Lecture Notes</title>
      <link>http://localhost:1313/posts/cs50p-week-08/</link>
      <pubDate>Tue, 17 Sep 2024 10:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/cs50p-week-08/</guid>
      <description>&lt;h2 id=&#34;oop-object-oriented-programming&#34;&gt;OOP (Object-Oriented Programming)&lt;/h2&gt;&#xA;&lt;h3 id=&#34;step-1-of-creating-an-oop&#34;&gt;Step 1 of creating an OOP&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; get_name()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    house &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; get_house()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;name&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; from &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;house&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_name&lt;/span&gt;():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; input(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Name: &amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_house&lt;/span&gt;():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; input(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;House: &amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    main()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Where the name and house variables are now defined by using separate functions, and those functions could be used again in the future.&lt;/p&gt;&#xA;&lt;h3 id=&#34;tuple&#34;&gt;Tuple&lt;/h3&gt;&#xA;&lt;p&gt;&lt;em&gt;&amp;ldquo;A tuple is a sequences of values. Unlike a list, a tuple can’t be modified. In spirit, we are returning two values.&amp;rdquo;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Developer Week 009</title>
      <link>http://localhost:1313/posts/dev-week-009/</link>
      <pubDate>Sun, 15 Sep 2024 16:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/dev-week-009/</guid>
      <description>&lt;h2 id=&#34;cs50p-progress-70&#34;&gt;CS50P (Progress 70%)&lt;/h2&gt;&#xA;&lt;h3 id=&#34;week-6-file-io&#34;&gt;Week 6 File I/O&lt;/h3&gt;&#xA;&lt;p&gt;This was easy but a bit tedious; especially when it came to Shirt and Scourgify to hit the format requirements with zero actional feedback. Took far too long troubleshooting the output to line up with the desired requirements which lacked specifics as to why the output was failing.&lt;/p&gt;&#xA;&lt;p&gt;Thankfully it&amp;rsquo;s done, and only took about 8 hours for this week&amp;rsquo;s lecture and assignment.&lt;/p&gt;</description>
    </item>
    <item>
      <title>CS50P Week 7 Lecture Notes</title>
      <link>http://localhost:1313/posts/cs50p-week-07/</link>
      <pubDate>Thu, 12 Sep 2024 10:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/cs50p-week-07/</guid>
      <description>&lt;h2 id=&#34;regular-expressions&#34;&gt;Regular Expressions&lt;/h2&gt;&#xA;&lt;p&gt;Really just a pattern. &lt;strong&gt;REGEX&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;email &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; input(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;What&amp;#39;s your email? &amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strip()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; email &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; email:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Valid&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Invalid&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;email &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; input(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;What&amp;#39;s your email? &amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strip()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;username, domain &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; email&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#if username and &amp;#34;.&amp;#34; in domain:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; username &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; domain&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;endswhith(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.edu&amp;#34;&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Valid&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Invalid&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;regular-expression-re&#34;&gt;Regular Expression (RE)&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.python.org/3/library/re.html&#34;&gt;Python Documentation&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;re.serach&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; re&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;email &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; input(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;What&amp;#39;s your email? &amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strip()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; re&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;serach(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@&amp;#34;&lt;/span&gt;, email):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Valid&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Invalid&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Validation characters&lt;/p&gt;</description>
    </item>
    <item>
      <title>CS50P Week 6 Lecture Notes</title>
      <link>http://localhost:1313/posts/cs50p-week-06/</link>
      <pubDate>Tue, 10 Sep 2024 10:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/cs50p-week-06/</guid>
      <description>&lt;h2 id=&#34;file-io&#34;&gt;File I/O&lt;/h2&gt;&#xA;&lt;p&gt;List can store multiple values, but they&amp;rsquo;re still saved in the computer memory; so nor permanent after the program closes.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;names &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; _ &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;names&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(input(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;What;s your name?&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; name &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; sorted(names):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;name&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;open&#34;&gt;Open&lt;/h3&gt;&#xA;&lt;p&gt;allows you to access a file&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; input(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;What&amp;#39;s your name?&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; open(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;names.txt&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;file&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;name&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;file&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&amp;ldquo;w&amp;rdquo; is for write to the file, and if the file doesn&amp;rsquo;t exist, &lt;strong&gt;open&lt;/strong&gt; will create the file automatically for me.&#xA;This will also overwrite the file each time.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Developer Week 007</title>
      <link>http://localhost:1313/posts/dev-week-007/</link>
      <pubDate>Sun, 01 Sep 2024 16:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/dev-week-007/</guid>
      <description>&lt;h2 id=&#34;linux&#34;&gt;Linux&lt;/h2&gt;&#xA;&lt;h3 id=&#34;omakub&#34;&gt;Omakub&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;An Omakase Developer Setup for Ubuntu 24.04 by DHH&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a href=&#34;https://omakub.org/&#34;&gt;https://omakub.org/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Took the plunge and setup Omakub on my T430. Took three attempts because of dependency glitches, but after a couple of restarts it installed without error and worked fine. Not sure I&amp;rsquo;m ready to jump into NeoVIM, but thus far I prefer the GUI compared to vanilla Ubuntu.&lt;/p&gt;&#xA;&lt;p&gt;Of course I stuck with the Tokyo Night theme, but there&amp;rsquo;s several prebuilt to chose from and the prebuilt &amp;ldquo;default&amp;rdquo; aspect is the point of Omakub.&lt;/p&gt;</description>
    </item>
    <item>
      <title>CS50X Week 10 Lecture Notes</title>
      <link>http://localhost:1313/posts/cs50x-week-10/</link>
      <pubDate>Mon, 19 Aug 2024 06:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/cs50x-week-10/</guid>
      <description>&lt;h2 id=&#34;cybersecurity&#34;&gt;Cybersecurity&lt;/h2&gt;&#xA;&lt;h3 id=&#34;brute-force-attack&#34;&gt;brute-force attack&lt;/h3&gt;&#xA;&lt;p&gt;4-digit password, 10^4 or 10,000 possible combinations.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;4-digit brute-force&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; string &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; digits&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; intertools &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; product&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; passcode &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; product(digits, repeat&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(passcode)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;4-ascii_letter password, 52^4 or 7,311,616 possible combinations.&#xA;&lt;strong&gt;4-ascii_letters brute-force&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; string &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; ascii_letters&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; intertools &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; product&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; passcode &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; product(ascii_letters, repeat&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(passcode)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;8-ascii_letter, digit, and punctuation password, 94^4 or 6,095,689,385,410,816 possible combinations.&#xA;&lt;strong&gt;8-ascii_letters, digit, punctuation brute-force&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; string &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; ascii_letters, digit, punctuation&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; intertools &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; product&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; passcode &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; product(ascii_letters &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; digit &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; punctuation, repeat&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(passcode)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;hashing&#34;&gt;Hashing&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;One-way hashing allows online services to actually &lt;em&gt;never&lt;/em&gt; store the original password typed by the user: Only the hashed value of these passwords. Accordingly, if there is a breach, only the hashed value will be known.&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;Rainbow tables&lt;/em&gt; are huge dictionaries that adversaries use to attempt to pre-hash possible passwords as a means by which to attempt to break the hash algorithm.&lt;/li&gt;&#xA;&lt;li&gt;As an additional process to heightened security, programmers may sometimes introduce &lt;em&gt;salting&lt;/em&gt; where it becomes unlikely that multiple users may have the same hash value to represent their passwords. You can imagine this as follows:&#xA;&lt;img src=&#34;https://cs50.harvard.edu/x/2024/notes/cybersecurity/cs50Week10Slide106.png&#34; alt=&#34;Salt Hashing&#34;&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;passkeys&#34;&gt;Passkeys&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cs50.harvard.edu/x/2024/notes/cybersecurity/cs50Week10Slide125.png&#34; alt=&#34;Passkeys&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>CS50X Week 09 Lecture Notes</title>
      <link>http://localhost:1313/posts/cs50x-week-09/</link>
      <pubDate>Thu, 15 Aug 2024 06:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/cs50x-week-09/</guid>
      <description>&lt;h2 id=&#34;flask&#34;&gt;Flask&lt;/h2&gt;&#xA;&lt;p&gt;3rd party Python library.&#xA;&lt;a href=&#34;https://flask.palletsprojects.com/en/2.2.x/api/?highlight=session#flask.session&#34;&gt;Flask Documentation&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; flask &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Flask, render_template, request&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;app &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Flask(__name__)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@app.route&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;index&lt;/span&gt;():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; request&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;args[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; render_template(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;index.html&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-HTML&#34; data-lang=&#34;HTML&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;initial-scale=1, width=device-width&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;hello&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        hello, {{ name }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;jinja&#34;&gt;Jinja&lt;/h3&gt;&#xA;&lt;p&gt;a language for Flask to use placeholders in html pages.&#xA;&lt;a href=&#34;https://jinja.palletsprojects.com/en/3.1.x/&#34;&gt;Jinja Documentation&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; flask &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Flask, render_template, request&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;app &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Flask(__name__)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@app.route&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;index&lt;/span&gt;():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; request&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;args[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; render_template(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;index.html&amp;#34;&lt;/span&gt;, placeholder&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;name)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-HTML&#34; data-lang=&#34;HTML&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;initial-scale=1, width=device-width&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;hello&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        hello, {{ placeholder }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;a list can cause of problem, so use .get&lt;/p&gt;</description>
    </item>
    <item>
      <title>Developer Week 004</title>
      <link>http://localhost:1313/posts/dev-week-004/</link>
      <pubDate>Sun, 11 Aug 2024 16:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/dev-week-004/</guid>
      <description>&lt;h2 id=&#34;cs50x-progress-64&#34;&gt;CS50X (Progress 64%)&lt;/h2&gt;&#xA;&lt;h3 id=&#34;week-5-data-structures&#34;&gt;Week 5 Data Structures&lt;/h3&gt;&#xA;&lt;h4 id=&#34;problem---speller&#34;&gt;Problem - Speller&lt;/h4&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&amp;ldquo;For this problem, you’ll implement a program that spell-checks a file, a la the below, using a hash table.&amp;rdquo;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;This kicked my ass! The lecture was excellent, but I struggled to wrap my head around pointers and hash tables.&lt;/p&gt;&#xA;&lt;p&gt;Huge shoutout to Low Level Learning&amp;rsquo;s &lt;a href=&#34;https://www.youtube.com/watch?v=2ybLD6_2gKM&#34;&gt;video&lt;/a&gt; on pointers; it made pointers click for me. I think it stemmed from the visual representation.&lt;/p&gt;</description>
    </item>
    <item>
      <title>CS50X Week 07 Lecture Notes</title>
      <link>http://localhost:1313/posts/cs50x-week-07/</link>
      <pubDate>Sat, 10 Aug 2024 06:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/cs50x-week-07/</guid>
      <description>&lt;h2 id=&#34;sql&#34;&gt;SQL&lt;/h2&gt;&#xA;&lt;p&gt;Database-centric language.&lt;/p&gt;&#xA;&lt;h2 id=&#34;flat-file-database&#34;&gt;flat-file database&lt;/h2&gt;&#xA;&lt;p&gt;CSV&lt;/p&gt;&#xA;&lt;h3 id=&#34;language-poll-of-class&#34;&gt;Language Poll of Class&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; csv&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&amp;#39;r&amp;#39; is default for open&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#using &amp;#39;with&amp;#39; will automatically close the file.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; open(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;favorites.csv&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; file:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;reader &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; csv&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;reader(file)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;#next will skip the header&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;next(reader)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; row &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; reader:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;print(row[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Continue with DictReader&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; csv&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&amp;#39;r&amp;#39; is default for open&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#using &amp;#39;with&amp;#39; will automatically close the file.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; open(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;favorites.csv&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; file:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;reader &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; csv&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DcitReader(file)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; row &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; reader:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;#this now prevents issues if columns move&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;#favorite = row[&amp;#34;language&amp;#34;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;More elegant way to iterate&lt;/p&gt;</description>
    </item>
    <item>
      <title>CS50X Week 06 Lecture Notes 02</title>
      <link>http://localhost:1313/posts/cs50x-week-06-1/</link>
      <pubDate>Sat, 10 Aug 2024 05:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/cs50x-week-06-1/</guid>
      <description>&lt;h2 id=&#34;artificial-intelligence&#34;&gt;Artificial Intelligence&lt;/h2&gt;&#xA;&lt;h3 id=&#34;prompt-engineering&#34;&gt;Prompt Engineering&lt;/h3&gt;&#xA;&lt;h4 id=&#34;system-prompt&#34;&gt;System Prompt&lt;/h4&gt;&#xA;&lt;p&gt;Guidelines to limit/specialize the LLMs behavior.&lt;/p&gt;&#xA;&lt;h4 id=&#34;user-prompt&#34;&gt;User Prompt&lt;/h4&gt;&#xA;&lt;p&gt;The user&amp;rsquo;s question or command to get an output from the LLM.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://cs50.ai&#34;&gt;CS50 AI&lt;/a&gt;&#xA;A usable LLM for programing questions, with a key design to provide hints and small steps, rather than spoon feeding the entire answer to the student.&lt;/p&gt;</description>
    </item>
    <item>
      <title>CS50X Week 06 Lecture Notes</title>
      <link>http://localhost:1313/posts/cs50x-week-06/</link>
      <pubDate>Sat, 10 Aug 2024 04:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/cs50x-week-06/</guid>
      <description>&lt;h2 id=&#34;python&#34;&gt;Python&lt;/h2&gt;&#xA;&lt;p&gt;Transitioning to Python, which offers the advantage of abstractions, a vast catalogue of libraries, and an ease of readability.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Python manages the memory for us, thus reducing the time requirements to code.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;The tradeoff is that Python is slower and takes up more space than C, but the tradeoff for faster coding speed is often worth it.&lt;/p&gt;&#xA;&lt;h3 id=&#34;edges-filter&#34;&gt;Edges Filter&lt;/h3&gt;&#xA;&lt;p&gt;This was one of the harder C assignments for Week 4, and in Python it&amp;rsquo;s quite simple.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Value of Learning and Skill Acquisition</title>
      <link>http://localhost:1313/posts/the-value-of-learning-and-skill-acquisition/</link>
      <pubDate>Tue, 20 Feb 2024 16:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/the-value-of-learning-and-skill-acquisition/</guid>
      <description>&lt;h2 id=&#34;assumptions&#34;&gt;Assumptions:&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;You work on average 2,000 hours/year.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;You make $70,000/year.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Or $35/hour.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;A new skill requires 500 hours to acquire.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;And that skill will increase your earnings by a 25%:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;$8.75/hour&lt;/li&gt;&#xA;&lt;li&gt;$17,500/year&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;This skill will remain valid for 10 years.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;It&amp;rsquo;s all or nothing.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Meaning 499 hours = 0% increase in earnings.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;em&gt;There are 168 hours in a week&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;50 hours go toward work&lt;/li&gt;&#xA;&lt;li&gt;56 hours go toward sleep/rest&lt;/li&gt;&#xA;&lt;li&gt;62 hours for you to allocate&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;argument&#34;&gt;Argument:&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;The skill value is $175,000 over ten years.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;$175,000 / 500 hours and you get expected value of $350/hour.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Or put another way, you&amp;rsquo;ll earn 10X per hour invested in the skill (&lt;em&gt;assuming you finish&lt;/em&gt;) compared to your work hour.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ChatGPT Technical Tutor</title>
      <link>http://localhost:1313/posts/chatgpt-technical-tutor/</link>
      <pubDate>Sun, 18 Feb 2024 16:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/chatgpt-technical-tutor/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been slowly figuring out the best way to approach learning with ChatGPT that&amp;rsquo;s not just give code, get back fixed code.&lt;/p&gt;&#xA;&lt;p&gt;While that no doubt is quick and efficient, it does little toward helping me progress my own knowledge base. However, finding a way to get back sourced information&amp;ndash;that I don&amp;rsquo;t have to skim the documentation for myself&amp;ndash;is a win!&lt;/p&gt;&#xA;&lt;p&gt;Over the past week, I&amp;rsquo;ve noticed a massive improvement in the quality of feedback. Not sure if it&amp;rsquo;s model upgrades on the server side, better prompting on my part, or a mixture of both.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
