<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bash on Philip Brazeale</title>
    <link>http://localhost:1313/tags/bash/</link>
    <description>Recent content in Bash on Philip Brazeale</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 23 Mar 2025 16:34:07 +0100</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/bash/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to Use the Terminal Like a Pro</title>
      <link>http://localhost:1313/posts/linux-terminal-article-notes/</link>
      <pubDate>Sun, 23 Mar 2025 16:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/linux-terminal-article-notes/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Source:&lt;/strong&gt; &lt;a href=&#34;https://www.freecodecamp.org/news/command-line-for-beginners/&#34;&gt;Command Line For Beginners&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;shell&#34;&gt;Shell:&lt;/h2&gt;&#xA;&lt;p&gt;A shell is a &lt;strong&gt;program&lt;/strong&gt; that acts as command-line interpreter. It &lt;strong&gt;processes commands&lt;/strong&gt; and &lt;strong&gt;outputs the results&lt;/strong&gt;. It interprets and processes the commands entered by the user.&lt;/p&gt;&#xA;&lt;h2 id=&#34;command-line-or-cli-command-line-interface&#34;&gt;Command line or CLI (command line interface):&lt;/h2&gt;&#xA;&lt;p&gt;The CLI is the interface in which we enter commands for the computer to process. In plain English once again, it&amp;rsquo;s the space in which you enter the commands the computer will process.&lt;/p&gt;</description>
    </item>
    <item>
      <title>LPIC-1 Study Guide Introduction</title>
      <link>http://localhost:1313/posts/lpic1-introduction/</link>
      <pubDate>Fri, 14 Mar 2025 16:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/lpic1-introduction/</guid>
      <description>&lt;h2 id=&#34;assessment-test-1130-37&#34;&gt;Assessment Test (11/30) ~37%&lt;/h2&gt;&#xA;&lt;p&gt;Great thing I have this book, and a few extra study materials. However, for a blind test going into it, I&amp;rsquo;m okay with my score. Especially if I count the partial answers. This will be fun.&lt;/p&gt;&#xA;&lt;h3 id=&#34;correct&#34;&gt;Correct&lt;/h3&gt;&#xA;&lt;p&gt;1, 2, 6, 7, 9, 10, 12, 13, 14, 15, 21, 22, 23, 24, 25, 26, 29&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1 is only partial, guessed born (thinking BASH Bourne Again SHell?), never heard of dash&lt;/li&gt;&#xA;&lt;li&gt;13 is only partial, didn&amp;rsquo;t choose network server (forgot about terminals LOL)&lt;/li&gt;&#xA;&lt;li&gt;15 only knew systemd, never heard of SysVinit&lt;/li&gt;&#xA;&lt;li&gt;21 guessed &lt;code&gt;ntpd&lt;/code&gt; so not sure it could count.&lt;/li&gt;&#xA;&lt;li&gt;23 knew ip didn&amp;rsquo;t know &lt;code&gt;nmtui&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;29, knew Port directive, didn&amp;rsquo;t guess &lt;code&gt;Protocol directive&lt;/code&gt;, &lt;code&gt;PermitRootLogin directive&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;incorrect&#34;&gt;Incorrect&lt;/h3&gt;&#xA;&lt;p&gt;1, 3, 4, 5, 8, 11, 13, 15, 16, 17, 18, 19, 20, 21, 23, 27, 28, 29, 30&lt;/p&gt;</description>
    </item>
    <item>
      <title>Boot.dev Learn Linux 06 Packages</title>
      <link>http://localhost:1313/posts/boot.dev-linux-06-packages/</link>
      <pubDate>Thu, 13 Mar 2025 16:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/boot.dev-linux-06-packages/</guid>
      <description>&lt;h2 id=&#34;64-webi&#34;&gt;6.4 Webi&lt;/h2&gt;&#xA;&lt;p&gt;There is one more package manager (actually more of an anti-package manager) I want to introduce you to: &lt;a href=&#34;https://webinstall.dev/&#34;&gt;Webi&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Webi lets you install command line tools directly from the web, with no need for a local command line tool like &lt;code&gt;apt&lt;/code&gt; or &lt;code&gt;brew&lt;/code&gt;. You don&amp;rsquo;t need to install webi itself at all, instead, you just run a shell command that downloads and runs the tool&amp;rsquo;s official installer script.&lt;/p&gt;&#xA;&lt;h3 id=&#34;assignment&#34;&gt;Assignment&lt;/h3&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s install &lt;a href=&#34;https://github.com/lsd-rs/lsd&#34;&gt;lsd&lt;/a&gt;, a more modern version of the &lt;code&gt;ls&lt;/code&gt; command. It&amp;rsquo;s essentially &lt;code&gt;ls&lt;/code&gt; with a bunch of extra features.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Boot.dev Learn Linux 05 Input Output</title>
      <link>http://localhost:1313/posts/boot.dev-linux-05-input-output/</link>
      <pubDate>Wed, 12 Mar 2025 16:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/boot.dev-linux-05-input-output/</guid>
      <description>&lt;h2 id=&#34;53-flags&#34;&gt;5.3 Flags&lt;/h2&gt;&#xA;&lt;h3 id=&#34;conventions&#34;&gt;Conventions&lt;/h3&gt;&#xA;&lt;p&gt;Whether or not a command takes flags, and what those flags are, is up to the developer of the command. That said there are some common conventions:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Single-character flags are prefixed with a single dash (.e.g &lt;code&gt;-a&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;li&gt;Multi-character flags are prefixed with two dashes (e.g. &lt;code&gt;--help&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;li&gt;Sometimes the same flag can be used with a single dash or two dashes (e.g. &lt;code&gt;-h&lt;/code&gt; or &lt;code&gt;--help&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;56-exit-codes&#34;&gt;5.6 Exit Codes&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Exit_status&#34;&gt;Exit codes&lt;/a&gt; (sometimes called &amp;ldquo;return codes&amp;rdquo; or &amp;ldquo;status codes&amp;rdquo;) are how programs communicate back whether they ran successfully or not.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Boot.dev Learn Linux 04 Programs</title>
      <link>http://localhost:1313/posts/boot.dev-linux-04-programs/</link>
      <pubDate>Tue, 11 Mar 2025 16:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/boot.dev-linux-04-programs/</guid>
      <description>&lt;h2 id=&#34;43-shebang&#34;&gt;4.3 Shebang&lt;/h2&gt;&#xA;&lt;p&gt;A &lt;a href=&#34;https://en.wikipedia.org/wiki/Shebang_(Unix)&#34;&gt;&amp;ldquo;shebang&amp;rdquo;&lt;/a&gt; is a special line at the top of a script that tells your shell which program to use to execute the file.&lt;/p&gt;&#xA;&lt;p&gt;The format of a shebang is:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#! interpreter [optional-arg]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For example, if your script is a Python script and you want to use Python 3, your shebang might look like this:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/python3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This tells the system to use the Python 3 interpreter located at &lt;code&gt;/usr/bin/python3&lt;/code&gt; to run the script.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linux Command Line: Part 3 Common Tasks and Essential Tools</title>
      <link>http://localhost:1313/posts/linux-command-line-03/</link>
      <pubDate>Mon, 10 Mar 2025 18:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/linux-command-line-03/</guid>
      <description>&lt;h2 id=&#34;14--package-management&#34;&gt;14 – Package Management&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Today, most people can satisfy all of their software needs by installing packages from their Linux distributor. This contrasts with the early days of Linux, when one had to download and compile source code to install software. There isn’t anything wrong with compiling source code; in fact, having access to source code is the great wonder of Linux. It gives us (and everybody else) the ability to examine and improve the system.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linux Command Line: Part 2 Configuration and the Environment</title>
      <link>http://localhost:1313/posts/linux-command-line-02/</link>
      <pubDate>Mon, 10 Mar 2025 10:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/linux-command-line-02/</guid>
      <description>&lt;h2 id=&#34;11---the-environment&#34;&gt;11 - The Environment&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;This shows an important rule regarding child processes: a child process cannot alter the environment of its parent.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;launching-a-program-with-a-temporary-environment&#34;&gt;Launching a Program with a Temporary Environment&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Another handy trick the shell provides is the ability to execute a command and give it a temporary environment variable. Sometimes we want to run a program and give it a special environment value. A good example is the man command which looks for an environment variable named MANWIDTH that tells man how wide to format its output.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Professor Messer CompTIA Security&#43; 1.0 General Security Concepts</title>
      <link>http://localhost:1313/posts/prof-messer-s&#43;01-general-security-concepts/</link>
      <pubDate>Sat, 08 Mar 2025 16:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/prof-messer-s&#43;01-general-security-concepts/</guid>
      <description>&lt;h2 id=&#34;11-compare-and-contrast-various-types-of-security-controls&#34;&gt;1.1 Compare and contrast various types of security controls&lt;/h2&gt;&#xA;&lt;h3 id=&#34;control-categories&#34;&gt;Control Categories&lt;/h3&gt;&#xA;&lt;p&gt;Technical Controls&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Firewalls, anti-virus&#xA;Managerial controls&lt;/li&gt;&#xA;&lt;li&gt;Security policy&#xA;Operational Controls&lt;/li&gt;&#xA;&lt;li&gt;Security Guards&lt;/li&gt;&#xA;&lt;li&gt;Password training guide&#xA;Physical Controls&lt;/li&gt;&#xA;&lt;li&gt;Fences, locks&lt;/li&gt;&#xA;&lt;li&gt;Badge Readers&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;control-types&#34;&gt;Control Types&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Preventative&lt;/li&gt;&#xA;&lt;li&gt;Deterrent&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Warning signs&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Detective&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Identify if and when breach occurs&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Corrective&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Applied after the event&lt;/li&gt;&#xA;&lt;li&gt;Restore from backups after ransomware&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Compensating&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Firewall blacks app until fixed&lt;/li&gt;&#xA;&lt;li&gt;Generator used for power outage&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Directive - Require employees to store data in encrypted drive. - &amp;ldquo;Authorized Personal Only&amp;rdquo;&#xA;&lt;img src=&#34;https://pbrazeale.github.io/images/control_type_examples.png&#34; alt=&#34;Control Type Examples.png&#34;&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;12-summarize-fundamental-security-concepts&#34;&gt;1.2 Summarize fundamental security concepts.&lt;/h2&gt;&#xA;&lt;h3 id=&#34;the-cia-triad&#34;&gt;The CIA Triad&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://pbrazeale.github.io/images/the_CIA_triad.png&#34; alt=&#34;The CIA Triad.png&#34;&gt;&#xA;Also, AIC triad.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linux Command Line: Part 1 Learning the Shell</title>
      <link>http://localhost:1313/posts/linux-command-line-01/</link>
      <pubDate>Thu, 20 Feb 2025 10:34:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/linux-command-line-01/</guid>
      <description>&lt;h2 id=&#34;01-what-is-the-shell&#34;&gt;01 What is the Shell&lt;/h2&gt;&#xA;&lt;p&gt;Terminal Emulators&lt;/p&gt;&#xA;&lt;p&gt;When using a graphical user interface (GUI), we need another program called a terminal emulator to interact with the shell. If we look through our desktop menus, we will probably find one. KDE uses konsole and GNOME uses gnome-terminal, though it&amp;rsquo;s likely called simply “terminal” on our menu. A number of other terminal emulators are available for Linux, but they all basically do the same thing; give us access to the shell. You will probably develop a preference for one or another terminal emulator based on the number of bells and whistles it has.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
